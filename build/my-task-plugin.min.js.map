{"version":3,"file":"my-task-plugin.min.js","sources":["../src/task.js","../src/index.js"],"sourcesContent":["export class Task {\r\n\r\n    constructor(inputs, component, worker) {\r\n        this.inputs = inputs;\r\n        this.component = component;\r\n        this.worker = worker;\r\n        this.next = [];\r\n        this.outputData = null;\r\n        this.closed = [];\r\n\r\n        this.getInputs('option').forEach(key => {\r\n            this.inputs[key].forEach(con => {\r\n                con.task.next.push({ key: con.key, task: this });\r\n            })\r\n        });\r\n    }\r\n\r\n    getInputs(type) {\r\n        return Object.keys(this.inputs)\r\n            .filter(key => this.inputs[key][0])\r\n            .filter(key => this.inputs[key][0].type === type)\r\n    }\r\n\r\n    reset() {\r\n        this.outputData = null;\r\n    }\r\n\r\n    async run(data, needReset = true, garbage = [], propagate = true) {\r\n        if (needReset)\r\n            garbage.push(this);\r\n\r\n        if (!this.outputData) {\r\n            var inputs = {};\r\n\r\n            await Promise.all(this.getInputs('output').map(async key => {\r\n                inputs[key] = await Promise.all(this.inputs[key].map(async con => {\r\n                    if (con) {\r\n                        await con.task.run(data, false, garbage, false);\r\n                        return con.task.outputData[con.key];\r\n                    }\r\n                }));\r\n            }));\r\n\r\n            this.outputData = await this.worker(this, inputs, data);\r\n\r\n            if (propagate)\r\n                await Promise.all(\r\n                    this.next\r\n                        .filter(f => !this.closed.includes(f.key))\r\n                        .map(async f =>\r\n                            await f.task.run(data, false, garbage)\r\n                        )\r\n                );\r\n        }\r\n\r\n        if (needReset)\r\n            garbage.map(t => t.reset());\r\n    }\r\n\r\n    clone(root = true, oldTask, newTask) {\r\n        const inputs = Object.assign({}, this.inputs);\r\n\r\n        if (root) // prevent of adding this task to `next` property of predecessor\r\n            this.getInputs('option').map(key => delete inputs[key]);\r\n        else // replace old tasks with new copies\r\n            Object.keys(inputs).map(key => {\r\n                inputs[key] = inputs[key].map(con => ({\r\n                    ...con,\r\n                    task: con.task === oldTask ? newTask : con.task\r\n                }));\r\n            });\r\n\r\n        const task = new Task(inputs, this.component, this.worker);\r\n\r\n        // manually add a copies of follow tasks\r\n        task.next = this.next.map(n => ({ key: n.key, task: n.task.clone(false, this, task) }));\r\n\r\n        return task;\r\n    }\r\n}","import { Task } from './task';\n\nfunction install(editor) {\n        \n    editor.on('componentregister', component => {\n        if (!component.task)\n            throw 'Task plugin requires a task property in component';\n        if (component.task.outputs.constructor !== Object)\n            throw 'The \"outputs\" field must be an object whose keys correspond to the Output\\'s keys';\n        \n        const taskWorker = component.worker;\n        const taskOptions = component.task;\n\n        component.worker = (node, inputs, outputs) => {\n            const task = new Task(inputs, component, (ctx, inps, data) => {\n                return taskWorker.call(ctx, node, inps, data);\n            });\n\n            if (taskOptions.init) taskOptions.init(task, node);\n            \n            Object.keys(taskOptions.outputs).map(key => {\n                outputs[key] = { type: taskOptions.outputs[key], key, task }\n            });\n        }\n\n    });\n}\n\nexport { Task } from './task';\nexport default {\n    name: 'task',\n    install,\n    Task\n}"],"names":["Task","inputs","component","worker","next","outputData","closed","getInputs","forEach","key","con","task","push","type","Object","keys","filter","data","needReset","garbage","propagate","Promise","all","map","run","f","includes","t","reset","root","oldTask","newTask","assign","n","clone","install","editor","on","outputs","constructor","taskWorker","taskOptions","node","ctx","inps","call","init","name"],"mappings":"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"}