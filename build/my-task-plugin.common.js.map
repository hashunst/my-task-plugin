{"version":3,"file":"my-task-plugin.common.js","sources":["../src/task.js","../src/index.js"],"sourcesContent":["export class Task {\r\n\r\n    constructor(inputs, component, worker) {\r\n        this.inputs = inputs;\r\n        this.component = component;\r\n        this.worker = worker;\r\n        this.next = [];\r\n        this.outputData = null;\r\n        this.closed = [];\r\n\r\n        this.getInputs('option').forEach(key => {\r\n            this.inputs[key].forEach(con => {\r\n                con.task.next.push({ key: con.key, task: this });\r\n            })\r\n        });\r\n    }\r\n\r\n    getInputs(type) {\r\n        return Object.keys(this.inputs)\r\n            .filter(key => this.inputs[key][0])\r\n            .filter(key => this.inputs[key][0].type === type)\r\n    }\r\n\r\n    reset() {\r\n        this.outputData = null;\r\n    }\r\n\r\n    async run(data, needReset = true, garbage = [], propagate = true) {\r\n        if (needReset)\r\n            garbage.push(this);\r\n\r\n        if (!this.outputData) {\r\n            var inputs = {};\r\n\r\n            await Promise.all(this.getInputs('output').map(async key => {\r\n                inputs[key] = await Promise.all(this.inputs[key].map(async con => {\r\n                    if (con) {\r\n                        await con.task.run(data, false, garbage, false);\r\n                        return con.task.outputData[con.key];\r\n                    }\r\n                }));\r\n            }));\r\n\r\n            this.outputData = await this.worker(this, inputs, data);\r\n\r\n            if (propagate)\r\n                await Promise.all(\r\n                    this.next\r\n                        .filter(f => !this.closed.includes(f.key))\r\n                        .map(async f =>\r\n                            await f.task.run(data, false, garbage)\r\n                        )\r\n                );\r\n        }\r\n\r\n        if (needReset)\r\n            garbage.map(t => t.reset());\r\n    }\r\n\r\n    clone(root = true, oldTask, newTask) {\r\n        const inputs = Object.assign({}, this.inputs);\r\n\r\n        if (root) // prevent of adding this task to `next` property of predecessor\r\n            this.getInputs('option').map(key => delete inputs[key]);\r\n        else // replace old tasks with new copies\r\n            Object.keys(inputs).map(key => {\r\n                inputs[key] = inputs[key].map(con => ({\r\n                    ...con,\r\n                    task: con.task === oldTask ? newTask : con.task\r\n                }));\r\n            });\r\n\r\n        const task = new Task(inputs, this.component, this.worker);\r\n\r\n        // manually add a copies of follow tasks\r\n        task.next = this.next.map(n => ({ key: n.key, task: n.task.clone(false, this, task) }));\r\n\r\n        return task;\r\n    }\r\n}","import { Task } from './task';\n\nfunction install(editor) {\n        \n    editor.on('componentregister', component => {\n        if (!component.task)\n            throw 'Task plugin requires a task property in component';\n        if (component.task.outputs.constructor !== Object)\n            throw 'The \"outputs\" field must be an object whose keys correspond to the Output\\'s keys';\n        \n        const taskWorker = component.worker;\n        const taskOptions = component.task;\n\n        component.worker = (node, inputs, outputs) => {\n            const task = new Task(inputs, component, (ctx, inps, data) => {\n                return taskWorker.call(ctx, node, inps, data);\n            });\n\n            if (taskOptions.init) taskOptions.init(task, node);\n            \n            Object.keys(taskOptions.outputs).map(key => {\n                outputs[key] = { type: taskOptions.outputs[key], key, task }\n            });\n        }\n\n    });\n}\n\nexport { Task } from './task';\nexport default {\n    name: 'task',\n    install,\n    Task\n}"],"names":["Task","inputs","component","worker","next","outputData","closed","getInputs","forEach","key","con","task","push","type","Object","keys","filter","data","needReset","garbage","propagate","Promise","all","map","run","f","includes","t","reset","root","oldTask","newTask","assign","n","clone","install","editor","on","outputs","constructor","taskWorker","taskOptions","node","ctx","inps","call","init","name"],"mappings":"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"}